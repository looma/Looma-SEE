// Quick script to import your data to port 27017
import { MongoClient } from "mongodb"
import fs from "node:fs/promises"

const uri = "mongodb://127.0.0.1:27017/see_exam_system"

// Your SEE 2081 test data
const testData = [
  {
    "_id": "see_2081_science_practice_full",
    "title": "SEE 2081 Science Comprehensive Practice Test",
    "titleNepali": "SEE ‡•®‡•¶‡•Æ‡•ß ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§æ",
    "subject": "science",
    "year": 2081,
    "totalMarks": 75,
    "duration": 180,
    "sections": ["A", "B", "C", "D"],
    "isActive": true,
    "createdAt": new Date("2025-08-09T18:30:00.000Z"),
    "updatedAt": new Date()
  },
  {
    "testId": "see_2081_science_practice_full",
    "questions": {
      "groupA": [
        {
          "id": "A01",
          "type": "multiple_choice",
          "questionNepali": "‡§§‡§≤‡§ï‡§æ ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§ï‡•Å‡§®‡§ö‡§æ‡§π‡§ø‡§Å ‡§§‡§§‡•ç‡§§‡•ç‡§ú‡§®‡•ç‡§Ø ‡§è‡§ï‡§æ‡§á ‡§π‡•ã ?",
          "questionEnglish": "Which one of the following is a derived unit?",
          "options": [
            { "id": "i", "nepali": "‡§ï‡•ç‡§Ø‡§æ‡§£‡•ç‡§°‡•á‡§≤‡§æ (Candela)", "english": "Candela" },
            { "id": "ii", "nepali": "‡§è‡§Æ‡•ç‡§™‡§ø‡§Ø‡§∞ (Ampere)", "english": "Ampere" },
            { "id": "iii", "nepali": "‡§®‡•ç‡§Ø‡•Å‡§ü‡§® (Newton)", "english": "Newton" },
            { "id": "iv", "nepali": "‡§Æ‡•ã‡§≤ (Mole)", "english": "Mole" }
          ],
          "correctAnswer": "iii",
          "marks": 1
        },
        {
          "id": "A02",
          "type": "multiple_choice",
          "questionNepali": "‡§∏‡§ø‡§Ö‡§∞‡•ç‡§ö‡§ø‡§®‡§≤‡§æ‡§à ‡§á‡§ï‡§æ‡§á‡§®‡•ã‡§°‡§∞‡•ç‡§Æ‡§æ‡§ü‡§æ ‡§´‡§æ‡§á‡§≤‡§Æ‡§Æ‡§æ ‡§∞‡§æ‡§ñ‡§ø‡§®‡•Å‡§ï‡•ã ‡§ï‡§æ‡§∞‡§£ ‡§ï‡•á ‡§π‡•ã ?",
          "questionEnglish": "What is the reason of keeping sea-urchin in phylum echinodermata?",
          "options": [
            { "id": "i", "nepali": "‡§∂‡§∞‡•Ä‡§∞, ‡§ü‡§æ‡§â‡§ï‡•ã, ‡§õ‡§æ‡§§‡•Ä ‡§∞ ‡§™‡•á‡§ü‡§Æ‡§æ ‡§µ‡§ø‡§≠‡§æ‡§ú‡§ø‡§§ ‡§≠‡§è‡§ï‡•ã‡§≤‡•á", "english": "Due to body being divided into head, thorax and abdomen" },
            { "id": "ii", "nepali": "‡§ü‡•ç‡§Ø‡•Å‡§µ ‡§´‡§ø‡§ü‡§ï‡•ã ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ‡§≤‡•á ‡§ö‡§æ‡§≤ ‡§¶‡•á‡§ñ‡§æ‡§â‡§®‡•á ‡§≠‡§è‡§ï‡•ã‡§≤‡•á", "english": "Due to locomotion with the help of tube-feet" },
            { "id": "iii", "nepali": "‡§∂‡§∞‡•Ä‡§∞ ‡§ü‡•á‡§™‡§ú‡§∏‡•ç‡§§‡•à ‡§™‡§æ‡§§‡§≤‡•ã, ‡§≤‡§æ‡§Æ‡•ã ‡§∞ ‡§ö‡•á‡§™‡•ç‡§ü‡•ã ‡§≠‡§è‡§ï‡•ã‡§≤‡•á", "english": "Due to body being flat and thin like a tape" },
            { "id": "iv", "nepali": "‡§Ø‡§ø‡§®‡•Ä‡§π‡§∞‡•Ç ‡§ì‡§∏‡§ø‡§≤‡•ã ‡§Æ‡§æ‡§ü‡•ã ‡§∞ ‡§™‡§æ‡§®‡•Ä‡§Æ‡§æ ‡§™‡§æ‡§á‡§®‡•á ‡§≠‡§è‡§ï‡•ã‡§≤‡•á", "english": "Due to them being found in moist soil and water" }
          ],
          "correctAnswer": "ii",
          "marks": 1
        },
        {
          "id": "A03",
          "type": "multiple_choice",
          "questionNepali": "‡§∞‡§ó‡§§‡§Æ‡§æ ‡§è‡§ï‡•ç‡§ï‡§æ‡§∏‡•Ä ‡§∏‡•á‡§§‡§æ ‡§∞‡§ï‡•ç‡§§‡§ï‡•ã‡§∑‡§ï‡•ã ‡§ï‡§Æ‡§ø ‡§≠‡§è‡§Æ‡§æ ‡§ï‡•Å‡§® ‡§∞‡•ã‡§ó ‡§≤‡§æ‡§ó‡•ç‡§õ ?",
          "questionEnglish": "Which disease is caused due to the deficiency of white blood cells in blood suddenly?",
          "options": [
            { "id": "i", "nepali": "‡§≤‡•ç‡§Ø‡•Å‡§ï‡•ã‡§™‡•á‡§®‡§ø‡§Ø‡§æ (leukopenia)", "english": "leukopenia" },
            { "id": "ii", "nepali": "‡§π‡•á‡§Æ‡•ã‡§´‡§ø‡§≤‡§ø‡§Ø‡§æ (haemophilia)", "english": "haemophilia" },
            { "id": "iii", "nepali": "‡§∞‡§ï‡•ç‡§§‡§Ö‡§≤‡•ç‡§™‡§§‡§æ (anemia)", "english": "anemia" },
            { "id": "iv", "nepali": "‡§≤‡•ç‡§Ø‡•Å‡§ï‡•á‡§Æ‡§ø‡§Ø‡§æ (leukemia)", "english": "leukemia" }
          ],
          "correctAnswer": "i",
          "marks": 1
        }
      ],
      "groupB": [
        {
          "id": "B01",
          "type": "short_answer",
          "questionNepali": "‡§Ö‡§®‡§≤‡§æ‡§á‡§® ‡§∞‡•á‡§™‡•ç‡§Ø‡•Å‡§ü‡•á‡§∏‡§® ‡§≠‡§®‡•á‡§ï‡•ã ‡§ï‡•á ‡§π‡•ã ?",
          "questionEnglish": "What is online reputation?",
          "marks": 1
        },
        {
          "id": "B02",
          "type": "short_answer",
          "questionNepali": "‡§∂‡•Å‡§¶‡•ç‡§ß ‡§∞‡§ó‡§§ ‡§Æ‡•Å‡§ü‡•Å‡§Æ‡§æ ‡§≤‡•ç‡§Ø‡§æ‡§â‡§®‡•á ‡§∞‡§ï‡•ç‡§§‡§®‡§≤‡•Ä‡§ï‡•ã ‡§®‡§æ‡§Æ ‡§ï‡•á ‡§π‡•ã ?",
          "questionEnglish": "What is the name of blood vessel that brings pure blood to the heart?",
          "marks": 1
        }
      ],
      "groupC": [
        {
          "id": "C01",
          "type": "long_answer",
          "questionNepali": "‡§Ü‡§ß‡§æ‡§∞‡§≠‡•Ç‡§§ ‡§è‡§ï‡§æ‡§á‡§ï‡•ã ‡§™‡§∞‡§ø‡§≠‡§æ‡§∑‡§æ ‡§≤‡•á‡§ñ‡•Ä ‡§è‡§â‡§ü‡§æ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§¶‡§ø‡§®‡•Å‡§π‡•ã‡§∏‡•ç ‡•§",
          "questionEnglish": "Define fundamental unit and give one example.",
          "marks": 2
        }
      ],
      "groupD": [
        {
          "id": "D01",
          "type": "essay",
          "questionNepali": "‡§®‡•ç‡§Ø‡•Å‡§ü‡§®‡§ï‡•ã ‡§ó‡•Å‡§∞‡•Å‡§§‡•ç‡§µ‡§æ‡§ï‡§∞‡•ç‡§∑‡§£ ‡§∏‡§Æ‡•ç‡§¨‡§®‡•ç‡§ß‡•Ä ‡§µ‡§ø‡§∂‡•ç‡§µ‡§µ‡•ç‡§Ø‡§æ‡§™‡•Ä ‡§®‡§ø‡§Ø‡§Æ ‡§≤‡•á‡§ñ‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç ‡§∞ F = Gm‚ÇÅm‚ÇÇ/d¬≤ ‡§≠‡§®‡•Ä ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§ö‡§ø‡§§‡•ç‡§∞‡§∏‡§π‡§ø‡§§ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç ‡•§",
          "questionEnglish": "State Newton's Universal law of gravitation and prove that F = Gm‚ÇÅm‚ÇÇ/d¬≤ with diagram.",
          "marks": 4
        }
      ]
    }
  }
]

async function switchTo27017() {
  console.log("üîÑ Switching to MongoDB port 27017...")
  
  const client = new MongoClient(uri)
  try {
    await client.connect()
    console.log("‚úÖ Connected to port 27017")
    
    const db = client.db("see_exam_system")
    
    // Clear existing data
    await db.collection("practice_tests").deleteMany({})
    await db.collection("questions").deleteMany({})
    console.log("üßπ Cleared existing data")
    
    // Import the test data
    const practiceTest = testData[0]
    const questions = testData[1]
    
    await db.collection("practice_tests").insertOne(practiceTest)
    await db.collection("questions").insertOne(questions)
    
    console.log("‚úÖ Imported SEE 2081 test to port 27017")
    
    // Verify
    const testCount = await db.collection("practice_tests").countDocuments()
    const questionCount = await db.collection("questions").countDocuments()
    
    console.log(`üìä Database now has:`)
    console.log(`   Practice tests: ${testCount}`)
    console.log(`   Question sets: ${questionCount}`)
    
  } catch (error) {
    console.error("‚ùå Error:", error)
  } finally {
    await client.close()
  }
}

switchTo27017()
